<UserControl x:Class="MYMGames.Hopscotch.View.AdvancedOptionsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MYMGames.Hopscotch.View"
             mc:Ignorable="d" 
             xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
             xmlns:k="http://schemas.microsoft.com/kinect/2014"
             d:DesignHeight="600" d:DesignWidth="600">
    <Grid>
        <Grid HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="85" Margin="120,0,0,0">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding backButtonVisibility}" Value="False">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Button Margin="3" Style="{StaticResource KinectTileButton}" Command="{Binding backButtonCommand}">
                <Image x:Name="image" Source="../Images/back-button.png"/>
            </Button>
        </Grid>
        <Grid Height="125" VerticalAlignment="Top" Margin="10,0,0,0">
            <TextBlock x:Name="textBlock" TextWrapping="Wrap" FontWeight="Bold" Text="{Binding ChooseDifficulty}" HorizontalAlignment="Center" FontSize="52" VerticalAlignment="Center" FontFamily="Ravie" Background="{x:Null}">
            </TextBlock>
        </Grid>
        <Grid Margin="10,125,0,10">
            <StackPanel HorizontalAlignment="Left" Width="423" Margin="75,66,0,10">
                <ItemsControl ItemsSource="{Binding timeTrialList}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding text}" IsChecked="{Binding value}" Style="{StaticResource CheckBoxStyle}" Margin="48.315,0,43.315,0" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
            <StackPanel Margin="503,66,402,0" Width="418">
                <ItemsControl ItemsSource="{Binding popQuizList}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding text}" IsChecked="{Binding value}" x:Name="checkPopUpQuiz" Style="{StaticResource CheckBoxStyle}" Margin="48.315,0,43.315,0" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding popQuizListAgeList}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <RadioButton GroupName="RadioButtonGroup" Content="{Binding text}" IsChecked="{Binding value}" Style="{StaticResource RadioButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=checkPopUpQuiz, Path=IsChecked}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
            <StackPanel Margin="0,66,0,0" Width="418.5" HorizontalAlignment="Right">
                <ItemsControl ItemsSource="{Binding readyList, UpdateSourceTrigger=PropertyChanged}" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button x:Name="MenuButton" Command="{Binding theCommand}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}"
                                    UIElement.MouseEnter="MenuButton_MouseEnter">
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(ee:PixelateEffect.Pixelation)" Storyboard.Target="{Binding ElementName=MenuButton}">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                                <Button.Effect>
                                    <ee:PixelateEffect Pixelation="0"></ee:PixelateEffect>
                                </Button.Effect>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="Transparent">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid Margin="0,25,0,5">
                                    <TextBlock x:Name="textBlock" Text="{Binding text}" HorizontalAlignment="Center" FontSize="64" FontWeight="Bold" VerticalAlignment="Center" FontFamily="Ravie" Background="{x:Null}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property= "Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <Trigger Property ="IsMouseOver" Value="True">
                                                        <Setter Property= "Foreground" Value="Red"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
